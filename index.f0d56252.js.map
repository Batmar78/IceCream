{"mappings":"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","sources":["node_modules/sliderm/src/utilities/dom.js","node_modules/sliderm/src/utilities/number.js","node_modules/sliderm/src/components/arrow/options.js","node_modules/sliderm/src/utilities/await.js","node_modules/sliderm/src/core/extenstion.js","node_modules/sliderm/src/core/modules/breakpoint.js","node_modules/sliderm/src/core/modules/transition.js","node_modules/sliderm/src/core/modules/transform.js","node_modules/sliderm/src/core/modules/autoplay.js","node_modules/sliderm/src/core/modules/grouping.js","node_modules/sliderm/src/core/modules/columns.js","node_modules/sliderm/src/core/modules/preview.js","node_modules/sliderm/src/core/modules/spacing.js","node_modules/sliderm/src/core/modules/align.js","node_modules/sliderm/src/core/modules/touch.js","node_modules/sliderm/src/core/modules/clone.js","node_modules/sliderm/src/core/selector.js","node_modules/sliderm/src/core/modules/slide.js","node_modules/sliderm/src/core/modules/loop.js","node_modules/sliderm/src/core/modules/init.js","node_modules/sliderm/src/components/paginiation.js","node_modules/sliderm/src/components/spinner.js","node_modules/sliderm/src/components/arrow.js","node_modules/sliderm/src/core/events/event-dispatcher.js","node_modules/sliderm/src/core/events/event-adapter.js","node_modules/sliderm/src/utilities/console.js","node_modules/sliderm/src/core/config.js","node_modules/sliderm/src/core/modules/page.js","src/index.js","node_modules/sliderm/src/sliderm.js"],"sourcesContent":["/**\n * A shorthand helper for document methods.\n */\n\n/**\n * Check if an element exists or not.\n *\n * @param {String} selector The CSS selector for an element.\n * @return {Boolean}\n */\nexport function hasDom(selector) {\n  const foundEl = document.querySelector(selector);\n  return foundEl !== null;\n}\n\n/**\n * Get an DOM element.\n *\n * @param {String} selector The CSS selector for an element.\n * @return {Null|Element}\n */\nexport function getDom(selector) {\n  if (hasDom(selector)) {\n    return document.querySelector(selector);\n  }\n  return null;\n}\n\n/**\n * Get an DOM element.\n *\n * @param {String} tag The HTML tag name.\n * @param {...any} name The name of a CSS selector.\n * @return {Element}\n */\nexport function setDom(tag, ...name) {\n  const node = document.createElement(tag);\n  node.classList.add(...name);\n  return node;\n}\n\n/**\n * Get an DOM element.\n *\n * @param {Element} parentDom The DOM element.\n * @param {String} selector The CSS selector for an element.\n * @return {Element|Null}\n */\nexport function findDom(parentDom, selector) {\n  try {\n    return parentDom.querySelector(selector);\n  } catch (err) {\n    return null;\n  }\n}\n","/**\n * Check whether a variable is numberic.\n *\n * @param {String} input Specify the variable to check.\n * @return {Boolean}\n */\nexport function isNumeric(input) {\n  return !(\n    Number.isNaN(Number(input)) || parseFloat(input).toString().length !== input.toString().length\n  );\n}\n\n/**\n * Check whether a variable is integer.\n *\n * @param {String} input Specify the variable to check.\n * @return {Boolean}\n */\nexport function isInteger(input) {\n  return Number.isFinite(input);\n}\n","import { isInteger } from '../../utilities/number';\n\n/**\n * Get the bold style of the arrow buttons.\n *\n * @param {String} arg The bold type.\n * @return {String}\n */\nexport const bold = (arg) => {\n  const boldTypes = {\n    1: 'thin',\n    2: 'regular', // default\n    3: 'bold',\n  };\n  return boldTypes[arg] !== undefined ? boldTypes[arg] : 'regular';\n};\n\n/**\n * Get the shape of the arrow buttons.\n *\n * @param {String} arg The shape type.\n * @return {String}\n */\nexport const shape = (arg) => {\n  if (arg === 'none' || arg === 'square') {\n    return arg;\n  }\n  return 'circle'; // default\n};\n\n/**\n * Get the font size of the arrow buttons.\n *\n * @param {String} arg The font size.\n * @return {Number|Null}\n */\nexport const size = (arg) => {\n  if (!isInteger(arg) || arg === 16) {\n    return null;\n  }\n  if (arg <= 13) {\n    return 13;\n  }\n  if (arg >= 28) {\n    return 28;\n  }\n  return arg;\n};\n\n/**\n * Get the background color.\n *\n * @param {String} color The hex color code.\n * @return {String}\n */\nexport const bgColor = (arg) => {\n  if (arg !== '#000000') {\n    return arg;\n  }\n  return null;\n};\n\n/**\n * Get the font color.\n *\n * @param {String} color The hex color code.\n * @return {String}\n */\nexport const color = (arg) => {\n  if (arg !== '#ffffff') {\n    return arg;\n  }\n  return null;\n};\n\n/**\n * Get the font color.\n *\n * @param {Number} arg The hex color code.\n * @return {Number|Null}\n */\nexport const opacity = (arg) => {\n  if (!isInteger(arg) || arg > 1 || arg < 0.1 || arg === 0.5) {\n    return null;\n  }\n  return arg;\n};\n","/**\n * Make sure all DOM have rendered already, then execute the callback function.\n *\n * @param {Function} callback The callback function.\n * @param {Number} duration The time to wait. (millisecond)\n * @return {Number} Timer ID\n */\nexport function queue(callback, duration = 0) {\n  return setTimeout(() => {\n    callback();\n  }, duration);\n}\n\n/**\n * Loop an execution of the callback function.\n *\n * @param {Function} callback The callback function.\n * @param {Number} duration The time to wait. (millisecond)\n * @return {Number} Timer ID\n */\nexport function repeat(callback, duration = 5000) {\n  return setInterval(() => {\n    callback();\n  }, duration);\n}\n\n/**\n * Cancel the setTnerval and setTimeout executions.\n *\n * @param {Number} timerId The timer ID\n */\nexport function stop(timerId) {\n  clearInterval(timerId);\n  clearTimeout(timerId);\n}\n","import pagination from '../components/paginiation';\nimport spinner from '../components/spinner';\nimport arrow from '../components/arrow';\nimport transition from './modules/transition';\nimport breakpoint from './modules/breakpoint';\nimport trasnform from './modules/transform';\nimport autoplay from './modules/autoplay';\nimport grouping from './modules/grouping';\nimport columns from './modules/columns';\nimport preview from './modules/preview';\nimport spacing from './modules/spacing';\nimport clone from './modules/clone';\nimport align from './modules/align';\nimport touch from './modules/touch';\nimport move from './modules/slide';\nimport loop from './modules/loop';\nimport init from './modules/init';\n\nexport const modules = [\n  breakpoint,\n  transition,\n  trasnform,\n  autoplay,\n  grouping,\n  columns,\n  preview,\n  spacing,\n  align,\n  touch,\n  clone,\n  move,\n  loop,\n  init,\n];\n\nexport const components = [pagination, spinner, arrow];\n","/**\n * Make the slider mobile-friendly.\n *\n * @param {Object} sliderm The Sliderm object.\n * @param {Element} slider The DOM element of the slider container.\n */\nexport default function breakpoint(sliderm, slider) {\n  if (!sliderm.getOption('breakpoint')) {\n    return;\n  }\n\n  /**\n   * Calculate the current column number for the breakpoint.\n   *\n   * @param {Object} breakpoints The breakpoint settings.\n   * @param {Number} columns The columns setting.\n   * @return {Number}\n   */\n  const calculate = (breakpoints, columns) => {\n    const width = window.innerWidth;\n    const current = Object.keys(breakpoints).filter((key) => width < breakpoints[key]);\n    return typeof current[0] !== 'undefined' ? Number(current[0]) : columns;\n  };\n\n  /**\n   * Initialize.\n   */\n  const init = () => {\n    const columns = sliderm.getOption('columns');\n    const breakpoints = sliderm.getOption('breakpoint.columns');\n    const current = Number(slider.getAttribute('data-columns'));\n    const column = calculate(breakpoints, columns);\n    slider.setAttribute('data-columns', columns);\n\n    if (column !== undefined && current !== column) {\n      const items = sliderm.getItems();\n      sliderm.updateOption('columns', column);\n      sliderm.updateCurrentItems();\n\n      for (let i = 0; i < items.length; i += 1) {\n        sliderm.go('columns', items[i]);\n      }\n\n      // Notice others the breakpoint has changed.\n      sliderm.emit('breakpoint.changed');\n    }\n  };\n\n  init();\n}\n","/**\n * The control of transition effect for each slide item.\n *\n * @param {Object} sliderm The Sliderm object.\n * @param {Element} slider The DOM elemet of the slider container.\n * @param {...any} args The arguments\n */\nexport default function transition(sliderm, slider, ...args) {\n  const [action] = args;\n  const duration = sliderm.getOption('duration');\n  if (action === 'stop') {\n    slider.style.removeProperty('transition-duration');\n    return;\n  }\n  slider.style.setProperty('transition-duration', `${duration}ms`);\n\n  sliderm.on('destory', () => {\n    slider.style.removeProperty('transition-duration');\n  });\n}\n","/**\n * Position the slide items horizontally.\n *\n * @param {Object} sliderm The Sliderm object.\n * @param {Element} slider The DOM element of the slider container.\n * @param {...any} args The arguments\n */\nexport default function transform(sliderm, slider, ...args) {\n  const [axis] = args;\n  slider.style.setProperty('transform', `translateX(${axis}px)`);\n\n  sliderm.on('destory', () => {\n    slider.style.removeProperty('transform');\n  });\n}\n","import { repeat, stop } from '../../utilities/await';\n\n/**\n * Autoplay the carousel.\n *\n * @param {Object} sliderm The Sliderm object.\n */\nexport default function autoplay(sliderm) {\n  if (!sliderm.getOption('autoplay')) {\n    return;\n  }\n\n  const duration = sliderm.getOption('autoplay.duration');\n  const direction = sliderm.getOption('autoplay.direction');\n  const arrow = direction === 'left' ? '<' : '>';\n\n  const timerId = repeat(() => {\n    sliderm.slideTo(arrow);\n  }, duration);\n\n  sliderm.on('destory', () => {\n    stop(timerId);\n  });\n}\n","/**\n * Set the grouping number for each slide item.\n *\n * @param {Object} sliderm The Sliderm instance.\n * @param {Element} slider The DOM element of the slider container.\n * @param {...any} args The arguments\n */\nexport default function grouping(sliderm, slider, ...args) {\n  const [item, index] = args;\n  const isGrouping = sliderm.getOption('grouping');\n  const orderNumber = index + 1;\n\n  if (isGrouping) {\n    const columns = sliderm.getOption('columns');\n    const groupNumber = Math.ceil((index + 1) / columns);\n    item.setAttribute('data-order', groupNumber);\n  } else {\n    item.setAttribute('data-order', orderNumber);\n  }\n\n  sliderm.on('destory', () => {\n    item.removeAttribute('data-order');\n  });\n}\n","/**\n * For displaying columns in the visible area of the slider.\n * Set the width of each slide item.\n *\n * @param {Object} sliderm The Sliderm object.\n * @param {Element} slider The DOM element of the slider container.\n * @param {...any} args The arguments\n */\nexport default function columns(sliderm, slider, ...args) {\n  const [item] = args;\n  const per = sliderm.getOption('columns');\n  const itemWidth = parseFloat(((1 / per) * 100).toFixed(2));\n  item.style.setProperty('flex', `0 0 ${itemWidth}%`);\n\n  sliderm.on('destory', () => {\n    item.style.removeProperty('flex');\n  });\n}\n","/**\n * Preview the edge of the previois and next item.\n *\n * @param {Object} sliderm The Sliderm object.\n * @param {Element} slider The DOM element of the slider container.\n */\nexport default function preview(sliderm, slider) {\n  if (!sliderm.getOption('preview')) {\n    return;\n  }\n  const edge = sliderm.getOption('preview.edge');\n  slider.style.setProperty('padding', `0 ${edge}px`);\n\n  sliderm.on('destory', () => {\n    slider.style.removeProperty('padding');\n  });\n}\n","/**\n * The spacing between each slide item.\n *\n * @param {Object} sliderm The Sliderm object.\n * @param {Element} slider The DOM element of the slider container.\n * @param {...any} args The arguments\n */\nexport default function spacing(sliderm, slider, ...args) {\n  const [item] = args;\n  const padding = Math.floor(sliderm.getOption('spacing') / 2);\n  item.style.setProperty('padding', `0px ${padding}px`);\n\n  sliderm.on('destory', () => {\n    item.style.removeProperty('padding');\n  });\n}\n","/**\n * Align the slide items vartically.\n *\n * @param {Object} sliderm The Sliderm object.\n * @param {Element} slider The DOM element of the slider container.\n */\nexport default function align(sliderm, slider) {\n  const option = sliderm.getOption('align');\n\n  if (option === 'center') {\n    slider.style.setProperty('align-items', 'center');\n  } else if (option === 'bottom') {\n    slider.style.setProperty('align-items', 'flex-end');\n  }\n\n  sliderm.on('destory', () => {\n    slider.style.removeProperty('align-items');\n  });\n}\n","/**\n * Add support for mobile devices to touch left and right swipe.\n *\n * @param {Object} sliderm The Sliderm object.\n * @param {Element} slider The DOM element of the slider container.\n */\nexport default function touch(sliderm, slider) {\n  if (!sliderm.getOption('touch')) {\n    return;\n  }\n\n  /**\n   * Initialize.\n   */\n  const init = () => {\n    const threshold = sliderm.getOption('touch.threshold');\n    const duration = sliderm.getOption('touch.duration');\n    const event = sliderm.adaptEvent(slider);\n    const start = {\n      x: 0,\n      y: 0,\n      time: 0,\n    };\n\n    event.on('touchstart', (e) => {\n      e.preventDefault();\n      const obj = e.changedTouches[0];\n      start.x = obj.pageX;\n      start.y = obj.pageY;\n      start.time = new Date().getTime();\n    });\n\n    event.on('touchmove', (e) => {\n      e.preventDefault();\n    });\n\n    event.on('touchend', (e) => {\n      e.preventDefault();\n      const obj = e.changedTouches[0];\n      const time = new Date().getTime() - start.time;\n      const distance = Math.abs(obj.pageX - start.x);\n\n      // The condition of swipe not met.\n      if (time > duration || distance < threshold) {\n        return;\n      }\n      const direction = obj.pageX > start.x ? '>' : '<';\n      sliderm.slideTo(direction);\n    });\n  };\n\n  init();\n}\n","import { cssCloneItem } from '../selector';\n\n/**\n * Clone the slide items to the left and right sides.\n *\n * @param {Object} sliderm The Sliderm instance.\n * @param {Element} slider The DOM element of the slider container.\n * @param {...any} args The arguments\n */\nexport default function clone(sliderm, slider, ...args) {\n  const [item, index] = args;\n  const columns = sliderm.getOption('columns');\n  const preview = sliderm.getOption('preview');\n  const loop = sliderm.getOption('loop');\n\n  // It's necessary to create cloned items if the options\n  // loop and preview are disabled.\n  if (!preview && !loop) {\n    return;\n  }\n\n  const itemCount = sliderm.getItemCount();\n  const items = sliderm.getItems();\n  const sideCount = columns;\n  const clonedNode = item.cloneNode(true);\n  let insertedClonedNode = null;\n  let isInserted = false;\n\n  clonedNode.classList.add(cssCloneItem);\n\n  if (index < sideCount) {\n    slider.appendChild(clonedNode);\n    isInserted = true;\n  }\n\n  if (index >= itemCount - sideCount) {\n    if (isInserted) {\n      insertedClonedNode = item.cloneNode(true);\n      insertedClonedNode.classList.add(cssCloneItem);\n      // Insert before the first slide item.\n      slider.insertBefore(insertedClonedNode, items[0]);\n    } else {\n      slider.insertBefore(clonedNode, items[0]);\n    }\n  }\n\n  sliderm.on('destory', () => {\n    clonedNode.remove();\n    if (insertedClonedNode) {\n      insertedClonedNode.remove();\n    }\n  });\n}\n","export const cssWrapper = 'sliderm';\nexport const cssSliderContainer = 'sliderm__slides';\nexport const cssSliderWrapper = 'sliderm__slider';\nexport const cssSliderItem = 'sliderm__slide';\nexport const cssPaginations = 'sliderm__paginations';\nexport const cssPaginationItem = 'sliderm__pagination';\nexport const cssButtonPrev = 'sliderm__button--previous';\nexport const cssButtonNext = 'sliderm__button--next';\nexport const cssCloneItem = 'sliderm__slide--clone';\nexport const cssEmptyItem = 'sliderm__slide--empty';\nexport const cssActiveItem = 'sliderm__slide--active';\nexport const cssPreviousdItem = 'sliderm__slide--previous';\nexport const cssNextItem = 'sliderm__slide--next';\nexport const cssSpinner = 'sliderm__spinner';\n","import { queue } from '../../utilities/await';\n\n/**\n * Position the slide items horizontally.\n *\n * @param {Object} sliderm The Sliderm object.\n * @param {Element} slider The DOM element of the slider container.\n * @param {...any} args The arguments\n */\nexport default function slide(sliderm, slider, ...args) {\n  const [direction, command] = args;\n  const isGrouping = sliderm.getOption('grouping');\n  const isPreview = sliderm.getOption('preview');\n  const duration = sliderm.getOption('duration');\n  const columns = sliderm.getOption('columns');\n  const isLoop = sliderm.getOption('loop');\n  const width = sliderm.getItems()[0].offsetWidth;\n  const page = sliderm.getPage();\n  const isClone = isLoop || isPreview;\n  const maxPosition = page.maximum();\n  let calculatedPosition = page.calculate(direction, false);\n  const isReposition = calculatedPosition < 1 || calculatedPosition > maxPosition;\n  let distance = 1;\n  let axis = 0;\n\n  if (!isLoop && isReposition) {\n    return;\n  }\n\n  if (isGrouping) {\n    distance = 0 - (isClone ? 0 : -1) - calculatedPosition;\n    axis = width * distance * columns;\n  } else {\n    distance = 1 - (isClone ? columns : 0) - calculatedPosition;\n    axis = width * distance;\n  }\n\n  // Event: slide.start\n  sliderm.emit('slide.start');\n\n  // Start sliding.\n  sliderm.go('transition', command);\n  sliderm.go('transform', axis);\n  sliderm.updatePosition(calculatedPosition);\n\n  if (isReposition) {\n    queue(() => {\n      calculatedPosition = page.calculate(direction, isReposition);\n\n      if (isGrouping) {\n        distance = 0 - calculatedPosition;\n        axis = width * distance * columns;\n      } else {\n        distance = 1 - columns - calculatedPosition;\n        axis = width * distance;\n      }\n\n      sliderm.go('transition', 'stop');\n      sliderm.go('transform', axis);\n      sliderm.updatePosition(calculatedPosition);\n\n      // Event: slide.end\n      sliderm.emit('slide.end');\n    }, duration + 10);\n  } else {\n    // Event: slide.end\n    sliderm.emit('slide.end');\n  }\n}\n","import { cssEmptyItem } from '../selector';\n\n/**\n * Handle the items when the option loop is enabled.\n *\n * @param {Object} sliderm The Sliderm object.\n * @param {Element} slider The DOM element of the slider container.\n */\nexport default function loop(sliderm, slider) {\n  const isLoop = sliderm.getOption('loop');\n  const isGrouping = sliderm.getOption('grouping');\n\n  if (!isLoop || !isGrouping) {\n    return;\n  }\n\n  const items = sliderm.getItems();\n  const columns = sliderm.getOption('columns');\n  const itemCount = sliderm.getItemCount();\n  const theLastItem = items[items.length - 1];\n  const count = columns - (itemCount % columns);\n  const nodes = [];\n\n  if (count === columns || columns === 1) {\n    return;\n  }\n\n  for (let i = 1; i <= count; i += 1) {\n    const clonedNode = theLastItem.cloneNode(true);\n    clonedNode.classList.add(cssEmptyItem);\n    clonedNode.innerHTML = '';\n    slider.appendChild(clonedNode);\n    nodes.push(clonedNode);\n  }\n\n  sliderm.updateCurrentItems();\n\n  sliderm.on('destory', () => {\n    nodes.forEach((node) => {\n      node.remove();\n    });\n  });\n}\n","import { cssWrapper } from '../selector';\nimport { queue } from '../../utilities/await';\n\n/**\n * Do things in the initializing statge.\n *\n * @param {Object} sliderm The Sliderm object.\n */\nexport default function init(sliderm) {\n  const duration = sliderm.getOption('duration');\n  const root = sliderm.getRoot();\n  root.classList.add(cssWrapper);\n  root.classList.remove(`${cssWrapper}--initialized`);\n  root.classList.add(`${cssWrapper}--initialize`);\n\n  sliderm.on('initialized', () => {\n    queue(() => {\n      root.classList.remove(`${cssWrapper}--initialize`);\n      root.classList.add(`${cssWrapper}--initialized`);\n    }, duration + 50);\n  });\n}\n","import { setDom, findDom } from '../utilities/dom';\nimport { cssPaginations, cssPaginationItem } from '../core/selector';\n\n/**\n * The view-component of Sliderm.\n * Create a pagination on the bottom side of the slider.\n *\n * @param {Object} sliderm The Sliderm instance.\n * @return {Object}\n */\nexport default function pagination(sliderm) {\n  let max;\n  let node;\n  let event;\n\n  /**\n   * The event handler for clicking the pagination button.\n   *\n   * @param {Object} e PointerEvent\n   */\n  const click = (e) => {\n    if (cssPaginationItem === e.target.className) {\n      const index = Array.prototype.indexOf.call(node.childNodes, e.target);\n      const paginationNumber = index + 1;\n      sliderm.slideTo(paginationNumber);\n    }\n  };\n\n  /**\n   * The event handler for marking up the active pagination button.\n   */\n  const mark = () => {\n    const position = sliderm.getPosition();\n    const dots = findDom(sliderm.getRoot(), `.${cssPaginations}`).children;\n    Array.from(dots).forEach((dot, index) => {\n      const paginationNumber = index + 1;\n      dot.removeAttribute('data-active');\n      if (paginationNumber === position) {\n        dot.setAttribute('data-active', true);\n      }\n    });\n  };\n\n  /**\n   * Inject the pagination to the DOM.\n   */\n  const render = () => {\n    const container = setDom('div', cssPaginations);\n    max = sliderm.getPage().maximum();\n    for (let i = 0; i < max; i += 1) {\n      const dot = setDom('div', cssPaginationItem);\n      if (i === 0) {\n        dot.setAttribute('data-active', true);\n      }\n      container.append(dot);\n    }\n    node = container;\n    event = sliderm.adaptEvent(node);\n    sliderm.getRoot().append(node);\n  };\n\n  /**\n   * Remove all events and the DOM we injected.\n   */\n  const destory = () => {\n    event.off('click', click);\n    sliderm.off('slide.end', mark);\n    node.remove();\n  };\n\n  /**\n   * Listen up the events.\n   */\n  const listen = () => {\n    event.on('click', click);\n    sliderm.on('slide.end', mark);\n  };\n\n  /**\n   * Initialize.\n   */\n  const init = () => {\n    render();\n    listen();\n  };\n\n  sliderm.on('destory', destory);\n\n  sliderm.on('breakpoint.changed', () => {\n    destory();\n    init();\n  });\n\n  init();\n}\n","import { setDom } from '../utilities/dom';\nimport { cssSpinner } from '../core/selector';\n\n/**\n * The view-component of Sliderm.\n * Create a loading effect of initializing stage.\n *\n * @param {Object} sliderm The Sliderm instance.\n * @return {Object}\n */\nexport default function spinner(sliderm) {\n  /**\n   * Initialize.\n   */\n  const init = () => {\n    const color = sliderm.getOption('spinner.color');\n    const node = setDom('div', cssSpinner);\n    node.style.setProperty('color', color);\n    sliderm.getRoot().append(node);\n\n    sliderm.on('destory', () => {\n      node.remove();\n    });\n  };\n\n  init();\n}\n","import { setDom } from '../utilities/dom';\nimport { size, bold, shape, color, bgColor, opacity } from './arrow/options';\nimport { cssButtonNext, cssButtonPrev } from '../core/selector';\n\n/**\n * The view-component of Sliderm.\n * Create the \"next button\" and \"previous button\" on both sides of the slider.\n *\n * @param {Object} sliderm The Sliderm instance.\n * @return {Object}\n */\nexport default function arrow(sliderm) {\n  /**\n   * Initialzie.\n   */\n  const init = () => {\n    const properties = [size, bold, shape, color, bgColor, opacity];\n\n    const prevButton = setDom('div', cssButtonPrev);\n    const nextButton = setDom('div', cssButtonNext);\n    const prevEvent = sliderm.adaptEvent(prevButton);\n    const nextEvent = sliderm.adaptEvent(nextButton);\n    let prevIcon = null;\n    let nextIcon = null;\n\n    for (let i = 0; i < properties.length; i += 1) {\n      let { name } = properties[i];\n      let value = properties[i](sliderm.getOption(`arrow.${name}`));\n\n      if (value !== null) {\n        if (name === 'bold') {\n          prevIcon = setDom('span', `sliderm__icon-left--${value}`);\n          nextIcon = setDom('span', `sliderm__icon-right--${value}`);\n        } else if (name === 'shape') {\n          prevButton.classList.add(`sliderm__button--${value}`);\n          nextButton.classList.add(`sliderm__button--${value}`);\n        } else {\n          if (name === 'bgColor') {\n            name = 'background-color';\n          } else if (name === 'size') {\n            name = 'font-size';\n            value = `${value}px`;\n          }\n          prevButton.style.setProperty(name, value);\n          nextButton.style.setProperty(name, value);\n        }\n      }\n    }\n\n    prevButton.append(prevIcon);\n    nextButton.append(nextIcon);\n    sliderm.getRoot().append(prevButton);\n    sliderm.getRoot().append(nextButton);\n\n    prevEvent.on('click', () => {\n      sliderm.slideTo('<');\n    });\n\n    nextEvent.on('click', () => {\n      sliderm.slideTo('>');\n    });\n\n    sliderm.on('destory', () => {\n      prevButton.remove();\n      nextButton.remove();\n    });\n  };\n\n  init();\n}\n","/**\n * Implement the observer pattern to give abilities for modules\n * for connecting each other.\n */\nexport default class EventDispatcher {\n  constructor() {\n    this.events = {};\n  }\n\n  /**\n   * Register an event listener.\n   *\n   * @param {String} name The event name.\n   * @param {Function} handler The callback function.\n   */\n  on(name, handler) {\n    if (!Object.prototype.hasOwnProperty.call(this.events, name)) {\n      this.events[name] = [];\n    }\n    this.events[name].push(handler);\n  }\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} name The event name.\n   * @param {Function} handler Named function used to indicate the memory reference to remove it.\n   */\n  off(name, handler) {\n    if (handler !== undefined) {\n      this.events[name].forEach((item, index) => {\n        if (item === handler) {\n          this.events[name].splice(index, 1);\n        }\n      });\n      return;\n    }\n    delete this.events[name];\n  }\n\n  /**\n   * Execute the registered closure.\n   *\n   * @param {String} name The event name.\n   * @param {...any} args The agruments.\n   */\n  emit(name, ...args) {\n    if (this.events[name] === undefined || !Array.isArray(this.events[name])) {\n      return;\n    }\n    this.events[name].forEach((closure) => {\n      closure(...args);\n    });\n  }\n\n  /**\n   * As you see, destory everything.\n   */\n  destory() {\n    delete this.events;\n  }\n}\n","/**\n * Implement the adapter pattern to the native DOM event methods.\n * So we are able to make references on the events we created,\n * and remove them completely when we don't need them.\n */\nexport default class EventAdapter {\n  /**\n   * Constructor.\n   *\n   * @param {EventTarget} target\n   */\n  constructor(target) {\n    this.target = target;\n    this.events = {};\n  }\n\n  /**\n   * Add an event to a HTML element.\n   *\n   * @param {String} event\n   * @param {Function} handler\n   */\n  on(event, handler) {\n    this.events[event] = handler;\n    this.target.addEventListener(event, this.events[event]);\n  }\n\n  /**\n   * Remove an event from a HTML element.\n   *\n   * @param {String} event\n   * @param {Function} handler\n   */\n  off(event) {\n    this.target.removeEventListener(event, this.events[event]);\n  }\n\n  /**\n   * Dispatch an event on a HTML element.\n   *\n   * @param {String} event\n   */\n  emit(event) {\n    if (typeof this.events[event] !== 'undefined') {\n      this.target.dispatchEvent(new Event(event));\n    }\n  }\n\n  /**\n   * As you see, destory everything.\n   */\n  destory() {\n    const events = Object.keys(this.events);\n    for (let i = 0; i < events.length; i += 1) {\n      this.off(events[i]);\n    }\n    delete this.events;\n  }\n\n  /**\n   * Mock to dispatch an event for current target.\n   *\n   * @param {String} event\n   * @param {Object} dispatchEvent\n   */\n  mock(event, dispatchEvent) {\n    if (typeof this.events[event] !== 'undefined') {\n      this.events[event](dispatchEvent);\n    }\n  }\n}\n","/**\n * Display the error message in the console.\n *\n * @param  {String} msg\n */\nexport function error(msg) {\n  // eslint-disable-next-line no-console\n  console.error(`[Sliderm] ${msg}`);\n}\n\nexport default error;\n","/**\n * Here are the deafult settings of the built-in features.\n * The detailed settings for the features has a prefix string \"_\" with them.\n */\nexport default {\n  /**\n   * Display the arrow buttons.\n   *\n   * @type {Boolean}\n   */\n  arrow: true,\n\n  /**\n   * Display the pagination, dot, dot, dots.\n   *\n   * @type {Boolean}\n   */\n  pagination: true,\n\n  /**\n   * Display the spinner when loading the slider.\n   *\n   * @type {Boolean}\n   */\n  spinner: true,\n\n  /**\n   * Slide column group or just single column group.\n   *\n   * @type {Boolean}\n   */\n  grouping: false,\n\n  /**\n   * Transform the slider into a carousel.\n   *\n   * @type {Boolean}\n   */\n  loop: true,\n\n  /**\n   * Preview a part of the previous and next item.\n   *\n   * @type {Boolean}\n   */\n  preview: false,\n\n  /**\n   * Make the slider responsive.\n   *\n   * @type {Boolean}\n   */\n  breakpoint: true,\n\n  /**\n   * Add support for mobile devices to touch left and right swipe.\n   *\n   * @type {Boolean}\n   */\n  touch: true,\n\n  /**\n   * Autoplay the carousel.\n   *\n   * @type {Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * How many items per view\n   *\n   * @type {Boolean}\n   */\n  columns: 4,\n\n  /**\n   * The duration of transition.\n   *\n   * @type {Number}\n   */\n  duration: 1000,\n\n  /**\n   * The spacing between each item.\n   *\n   * @type {Number}\n   */\n  spacing: 10,\n\n  /**\n   * Align the slide items vertically.\n   * Expected value: top | center | bottom\n   *\n   * @type {String}\n   */\n  align: 'center',\n\n  /**\n   * Install the customized functional modules and view components.\n   * Each extension is a named function, an anonymous function is not acceptable here.\n   *\n   * An extension is identified as a view component if an option's key is fit to\n   * the function's name, otherwise as a functional module.\n   */\n  extensions: [],\n\n  /**\n   * The customized options for arrow buttons.\n   *\n   * @type {Object}\n   */\n  _arrow: {\n    /**\n     * The arrow icon's color.\n     *\n     * @type {String}\n     */\n    color: '#ffffff',\n\n    /**\n     * The background color of the arrow's container.\n     *\n     * @type {String}\n     */\n    bgColor: '#000000',\n\n    /**\n     * The opacity of the arrow's container.\n     *\n     * @type {Number}\n     */\n    opacity: 0.5,\n\n    /**\n     * The size of the arrow icons.\n     * Expected value: 13 - 28\n     *\n     * @type {Number}\n     */\n    size: 16,\n\n    /**\n     * The shape of the arrow icon.\n     * Expected value: circle | square | none\n     *\n     * @type {String}\n     */\n    shape: 'circle',\n\n    /**\n     * The bold of the arrow icon.\n     * Expected value: 1 | 2 | 3\n     *\n     * @type {Number}\n     */\n    bold: 2,\n  },\n\n  /**\n   * The customized options for Preview.\n   *\n   * @type {Object}\n   */\n  _preview: {\n    /**\n     * The width of the edge of the previous and next items.\n     *\n     * @type {Number}\n     */\n    edge: 40,\n  },\n\n  /**\n   * The customized options for spinner.\n   *\n   * @type {Object}\n   */\n  _spinner: {\n    /**\n     * The color of the spinner.\n     *\n     * @type {String}\n     */\n    color: '#1cbbb4',\n  },\n\n  /**\n   * The customized options for responsive.\n   *\n   * @type {Object}\n   */\n  _breakpoint: {\n    /**\n     * The breakpoints used to change the columns in visible area of the slider.\n     * To disable the breakpoint, set it to false.\n     *\n     * @type {Object}\n     */\n    columns: {\n      4: false,\n      3: 960,\n      2: 768,\n      1: 420,\n    },\n  },\n\n  /**\n   * The customized options for touch.\n   *\n   * @type {Object}\n   */\n  _touch: {\n    /**\n     * The minimum distance traveled to be considered a swipe.\n     *\n     * @type {Number} pixel\n     */\n    threshold: 10,\n    /**\n     * The maximum time spent to be considered a swipe.\n     *\n     * @type {Number} millisecond\n     */\n    duration: 300,\n  },\n\n  /**\n   * The customized options for autoplay.\n   *\n   * @type {Object}\n   */\n  _autoplay: {\n    /**\n     * The direction that slider items will move on.\n     *\n     * @type {String}\n     */\n    direction: 'right',\n    /**\n     * The time to stay and then play the next.\n     *\n     * @type {Number} millisecond\n     */\n    duration: 5000,\n  },\n};\n","/**\n * Calculate the current page number and the maximum page number.\n */\nexport default class Page {\n  /**\n   * Constructor.\n   *\n   * @param {Object} sliderm The Sliderm instacne.\n   */\n  constructor(sliderm) {\n    this.sliderm = sliderm;\n  }\n\n  /**\n   * Calculate what the pagination number will be.\n   *\n   * @param {...any} args The arguments.\n   * @return {Number} The result pagination number.\n   */\n  calculate(...args) {\n    const [direction, isReposition] = args;\n    const columns = this.sliderm.getOption('columns');\n    const isGrouping = this.sliderm.getOption('grouping');\n    const itemCount = this.sliderm.getItemCount();\n    const groupCount = this.sliderm.getGroupCount();\n    const position = this.sliderm.getPosition();\n    const unitCount = isGrouping ? groupCount : itemCount;\n    let current = position;\n    let result = 0;\n\n    if (isGrouping) {\n      const originalGroup = Math.ceil((position * columns) / columns);\n      current = originalGroup;\n    }\n\n    if (typeof direction === 'number') {\n      result = direction;\n    } else if (direction === '>') {\n      result = current + 1;\n      if (result > unitCount && isReposition) {\n        result = 1;\n      }\n    } else if (direction === '<') {\n      result = current - 1;\n      if (result <= 0 && isReposition) {\n        result = unitCount;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Calculate the maximum page number.\n   *\n   * @return {Number}\n   */\n  maximum() {\n    const isLoop = this.sliderm.getOption('loop');\n    const isPreview = this.sliderm.getOption('preview');\n    const isGrouping = this.sliderm.getOption('grouping');\n    const columns = this.sliderm.getOption('columns');\n    const isClone = isLoop || isPreview;\n\n    if (isGrouping) {\n      return this.sliderm.getGroupCount();\n    }\n\n    if (isClone) {\n      return this.sliderm.getItemCount();\n    }\n\n    return this.sliderm.getItemCount() - columns + 1;\n  }\n}\n","import Sliderm from 'sliderm';\nimport 'sliderm/src/assets/scss/index.scss';\n\nconst sliderm = new Sliderm('.your-class-name', {\n  arrow: false,\n  pagination: true,\n  grouping: false,\n  loop: true,\n  preview: false,\n  columns: 1,\n  duration: 1000,\n  spacing: 10,\n  align: 'center',\n});\n\n// (() => {\n//   const mobileMenu = document.querySelector('.js-menu-container');\n//   const openMenuBtn = document.querySelector('.js-open-menu');\n//   const closeMenuBtn = document.querySelector('.js-close-menu');\n//   const toggleMenu = () => {\n//     const isMenuOpen =\n//       openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n//     openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n//     mobileMenu.classList.toggle('is-open');\n//     const scrollLockMethod = !isMenuOpen\n//       ? 'disableBodyScroll'\n//       : 'enableBodyScroll';\n//     bodyScrollLock[scrollLockMethod](document.body);\n//   };\n//   openMenuBtn.addEventListener('click', toggleMenu);\n//   closeMenuBtn.addEventListener('click', toggleMenu);\n\n//   // Закрываем мобильное меню на более широких экранах\n//   // в случае изменения ориентации устройства.\n//   // Close the mobile menu on wider screens if the device orientation changes\n//   window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n//     if (!e.matches) return;\n//     mobileMenu.classList.remove('is-open');\n//     openMenuBtn.setAttribute('aria-expanded', false);\n//     bodyScrollLock.enableBodyScroll(document.body);\n//   });\n// })();\n\n// const refs = {\n//   mobileMenu: document.querySelector('.js-menu-container'),\n//   openMenuBtn: document.querySelector('.js-open-menu'),\n//   closeMenuBtn: document.querySelector('.js-close-menu'),\n// }\n\n\n\n// const toggleMenu = () => {\n//   console.log(refs.openMenuBtn)\n//   refs.mobileMenu.classList.toggle('is-open');\n// }\n\n// refs.openMenuBtn.addEventListener('click', toggleMenu);\n// refs.closeMenuBtn.addEventListener('click', toggleMenu);\n\n(() => {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n  const toggleMenu = () => {\n    const isMenuOpen =\n      openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n    mobileMenu.classList.toggle('is-open');\n    const scrollLockMethod = !isMenuOpen\n      ? 'disableBodyScroll'\n      : 'enableBodyScroll';\n    bodyScrollLock[scrollLockMethod](document.body);\n  };\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n\n  // Закрываем мобильное меню на более широких экранах\n  // в случае изменения ориентации устройства.\n  // Close the mobile menu on wider screens if the device orientation changes\n  window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    mobileMenu.classList.remove('is-open');\n    openMenuBtn.setAttribute('aria-expanded', false);\n    bodyScrollLock.enableBodyScroll(document.body);\n  });\n})();","import { components, modules } from './core/extenstion';\nimport { cssSliderContainer } from './core/selector';\nimport { getDom, findDom } from './utilities/dom';\nimport EventDispatcher from './core/events/event-dispatcher';\nimport EventAdapter from './core/events/event-adapter';\nimport { error } from './utilities/console';\nimport config from './core/config';\nimport Page from './core/modules/page';\n\n/**\n * Main class.\n */\nexport default class Sliderm {\n  constructor(el, options) {\n    const root = getDom(el);\n    if (!root) {\n      error(`The DOM \"${el}\" is invalid.`);\n      return;\n    }\n    this.options = Object.assign(config, options);\n    this.event = new EventDispatcher();\n    this.page = new Page(this);\n    this.root = root;\n    this.initialized = false;\n    this.domEvents = [];\n    this.itemCount = 0;\n    this.position = 1;\n    this.modules = {};\n    this.slider = findDom(this.root, `.${cssSliderContainer}`);\n    this.items = [];\n    this.#initialize();\n  }\n\n  /**\n   * Initialize Sliderm HTML structure.\n   */\n  #initialize() {\n    // Event: initialize\n    this.emit('initialize');\n\n    this.#updateItems();\n    this.#updateGroupCount();\n    this.#beforeMountExtensions();\n    this.#mountExtensions();\n    this.go('init');\n    this.go('breakpoint');\n    this.go('loop');\n    this.go('align');\n    this.go('touch');\n    this.go('preview');\n    this.go('autoplay');\n    this.items.forEach((item, index) => {\n      this.go('columns', item);\n      this.go('spacing', item);\n      this.go('grouping', item, index);\n      this.go('clone', item, index);\n    });\n    this.slideTo(1);\n    this.initialized = true;\n\n    // Event: initialized\n    this.emit('initialized');\n  }\n\n  /**\n   * Mount core-modules and view-components.\n   */\n  #mountExtensions() {\n    for (let i = 0; i < modules.length; i += 1) {\n      if (typeof modules[i] === 'function') {\n        this.modules[modules[i].name] = modules[i];\n      }\n    }\n    for (let i = 0; i < components.length; i += 1) {\n      if (typeof components[i] === 'function' && this.getOption(components[i].name)) {\n        components[i](this);\n      }\n    }\n  }\n\n  /**\n   * Update slide items.\n   */\n  #updateItems() {\n    this.items = Array.from(findDom(this.root, `.${cssSliderContainer}`).children);\n    this.itemCount = this.items.length;\n  }\n\n  /**\n   * Update group count.\n   */\n  #updateGroupCount() {\n    const columns = this.getOption('columns');\n    this.groupCount = Math.ceil(this.itemCount / columns);\n  }\n\n  /**\n   * Install customized extensions.\n   */\n  #beforeMountExtensions() {\n    for (let i = 0; i < this.options.extensions.length; i += 1) {\n      const extName = this.options.extensions[i].name;\n      if (extName !== '') {\n        const extension = this.options.extensions[i];\n        if (this.options[extName] === undefined) {\n          modules.push(extension);\n        } else {\n          components.push(extension);\n        }\n      }\n    }\n  }\n\n  /**\n   * Create an Event Adapter on a DOM element.\n   * We also collect the references here for destorying them later.\n   *\n   * @param {Element} node DOM element\n   * @return {EventAdapter}\n   */\n  adaptEvent(node) {\n    const event = new EventAdapter(node);\n    this.domEvents.push(event);\n    return event;\n  }\n\n  /**\n   * Get the Page instance.\n   *\n   * @return {Page}\n   */\n  getPage() {\n    return this.page;\n  }\n\n  /**\n   * The root DOM of the slider.\n   *\n   * @return {Element}\n   */\n  getRoot() {\n    return this.root;\n  }\n\n  /**\n   * Get total of slides.\n   *\n   * @return {Number}\n   */\n  getItemCount() {\n    return this.itemCount;\n  }\n\n  /**\n   * Get group count.\n   *\n   * @return {Number}\n   */\n  getGroupCount() {\n    return this.groupCount;\n  }\n\n  /**\n   * Get the slide items.\n   *\n   * @return {Array}\n   */\n  getItems() {\n    return this.items;\n  }\n\n  /**\n   * Get the current position in the visible area of slider.\n   *\n   * @return {Number}\n   */\n  getPosition() {\n    return this.position;\n  }\n\n  /**\n   * Update the current position number.\n   *\n   * @param {Number} position The postition number.\n   */\n  updatePosition(position) {\n    this.position = position;\n  }\n\n  /**\n   * Update current items.\n   * This method can not be called after initializing.\n   *\n   * @return {Boolean}\n   */\n  updateCurrentItems() {\n    if (this.initialized) {\n      return false;\n    }\n    this.#updateItems();\n    this.#updateGroupCount();\n    return true;\n  }\n\n  /**\n   * Get an option.\n   *\n   * @param {String} field The name of a field in options.\n   * @param {Mixed} defailts The default value as the field doesn't exists.\n   * @return {Mixed}\n   */\n  getOption(field, defaults = null) {\n    const option = this.options[field] !== undefined ? this.options[field] : defaults;\n    if (field.includes('.')) {\n      try {\n        const [a, b] = field.split('.');\n        return this.options[`_${a}`][b];\n      } catch (err) {\n        return defaults;\n      }\n    }\n    return option;\n  }\n\n  /**\n   * Update an option.\n   *\n   * @param {String} field The name of a field in options.\n   * @param {Mixed} value The value to update the field.\n   */\n  updateOption(field, value) {\n    if (field.includes('.')) {\n      try {\n        const [a, b] = field.split('.');\n        this.options[`_${a}`][b] = value;\n        // eslint-disable-next-line no-empty\n      } catch (err) {}\n      return;\n    }\n    this.options[field] = value;\n  }\n\n  /**\n   * Slide to specific pagination.\n   *\n   * @param {Number|String} pagination\n   * Number for the pagination number. Expected value: [0-9]+\n   * String for the direction. Expected value: > | <\n   */\n  slideTo(pagination) {\n    this.go('slide', pagination);\n  }\n\n  /**\n   * Call the module.\n   *\n   * @param {String} module The module name.\n   * @param {Object} args The arguments.\n   */\n  go(module, ...args) {\n    if (this.modules[module] === undefined) {\n      error(`Invalid module name: ${module}`);\n      return;\n    }\n    this.modules[module](this, this.slider, ...args);\n  }\n\n  /**\n   * Register an event listener.\n   *\n   * @param {String} name The event name.\n   * @param {Function} handler The callback function.\n   */\n  on(name, handler) {\n    this.event.on(name, handler);\n  }\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} name The event name.\n   * @param {Function} handler The callback function.\n   */\n  off(name, handler) {\n    this.event.off(name, handler);\n  }\n\n  /**\n   * Execute the registered function.\n   *\n   * @param {String} name The event name of each event listener.\n   * @param {...any} args The agruments.\n   */\n  emit(name, ...args) {\n    const thisArgs = [this, ...args];\n    this.event.emit(name, ...thisArgs);\n  }\n\n  /**\n   * Destory appended DOM and attched events.\n   */\n  destory() {\n    this.event.emit('destory');\n    this.event.destory();\n    this.domEvents.forEach((event) => {\n      event.destory();\n    });\n  }\n}\n"],"names":["$47b1ab5484dfedb1$export$6c34eab6e99e0f60","selector","document","querySelector","$47b1ab5484dfedb1$export$4ff9a33f798e9d76","$47b1ab5484dfedb1$export$8785b4c224014cbf","tag","name","node","createElement","classList","add","$47b1ab5484dfedb1$export$a761b9ec8072c3b3","parentDom","err","$106dd5f2d4a4ece1$export$a287f47fed4544b8","input","Number","isFinite","$a81a074e84ffda04$export$73ba5813cda80a49","arg","boldTypes","undefined","$a81a074e84ffda04$export$98bada23690e67eb","$a81a074e84ffda04$export$346677f925de839c","$a81a074e84ffda04$export$7dcbec377a25efc6","$a81a074e84ffda04$export$35e9368ef982300f","$a81a074e84ffda04$export$c17a3be1057836e","$8d1822a75ab5c371$export$4f7fa46ff53e516f","callback","duration","setTimeout","$8d1822a75ab5c371$export$76d90c956114f2c2","setInterval","$8d1822a75ab5c371$export$fa6813432f753b0d","timerId","clearInterval","clearTimeout","$23b84aba4baf200f$export$cc2c248003684daa","sliderm","slider","getOption","columns","breakpoints","current","getAttribute","column","width","window","innerWidth","Object","keys","filter","key","calculate","setAttribute","items","getItems","updateOption","updateCurrentItems","i","length","go","emit","init","args","action","style","setProperty","on","removeProperty","axis","arrow","slideTo","item","index","orderNumber","groupNumber","Math","ceil","removeAttribute","per","itemWidth","parseFloat","toFixed","edge","padding","floor","option","threshold","event","adaptEvent","start","x","y","time","e","preventDefault","obj","changedTouches","pageX","pageY","Date","getTime","distance","abs","direction","preview","loop","itemCount","getItemCount","sideCount","clonedNode","cloneNode","insertedClonedNode","isInserted","appendChild","insertBefore","remove","command","isGrouping","isPreview","isLoop","offsetWidth","page","getPage","isClone","maxPosition","maximum","calculatedPosition","isReposition","updatePosition","theLastItem","count","nodes","innerHTML","push","forEach","root","getRoot","$23b84aba4baf200f$export$9b5ac10f59f76296","max","click","target","className","paginationNumber","Array","prototype","indexOf","call","childNodes","mark","position","getPosition","dots","children","from","dot","destory","off","container","append","render","color","properties","prevButton","nextButton","prevEvent","nextEvent","prevIcon","nextIcon","value","$1f5cec2ac6bbf70a$export$2e2bcd8739ae039","constructor","this","events","handler","hasOwnProperty","splice","isArray","closure","$741b70865fecd92d$export$2e2bcd8739ae039","addEventListener","removeEventListener","dispatchEvent","Event","mock","$8d634ecd0354b3eb$export$a3bc9b8ed74fc","msg","console","error","$fd7e2a78ea71cf62$export$2e2bcd8739ae039","pagination","spinner","grouping","breakpoint","touch","autoplay","spacing","align","extensions","_arrow","bgColor","opacity","size","shape","bold","_preview","_spinner","_breakpoint","_touch","_autoplay","$4d27deab9b9c699f$export$2e2bcd8739ae039","groupCount","getGroupCount","unitCount","result","el","options","assign","initialized","domEvents","modules","initialize","updateItems","updateGroupCount","beforeMountExtensions","mountExtensions","i1","extName","extension","field","defaults","includes","a","b","split","module","thisArgs","mobileMenu","openMenuBtn","closeMenuBtn","toggleMenu","isMenuOpen","toggle","bodyScrollLock","body","matchMedia","matches","enableBodyScroll"],"version":3,"file":"index.f0d56252.js.map"}